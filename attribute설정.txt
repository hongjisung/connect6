한줄을 보고 attribute 정하기

규칙 1. 장애물은 나의 돌처럼 여긴다.
규칙 2. 한 줄은 19줄이다.
규칙 3. 돌이 7개 이상 둔 것은 의미가 없다.
규칙 4. 적의 돌은 방해물이다.

목표 
1. alpha-beta pruning에서의 heuristic function은 바둑판의 상황이 나에게 얼마나 유리한가를 보는 것이다.
2. heuristic function은 output으로 하나의 value를 내보내야 한다.
3. 적당한 attribute들을 설정하고 그 상황에서의 lable(승,패)를 측정한다.
4. attribute는 특정한 상황의 개수를 의미한다.
5. label를 분리시키는 함수를 logistic regression을 통해 구한다.
6. 값을 대입해서 value를 측정
7. 값이 가장 큰 경우 - 나에게 유리, 값이 가장 작은 경우, 나에게 불리

문제상황 :  한 줄에 돌이 여러군데 있는 경우
xxxx00000xxxx0000xxx 와 같은 상황이라면

한 점이 가지는 값은 세 개 : 비었음, 내돌 적돌
즉 19개판의 모든 경우의 수는 3의 19승이다.

attribute 정하기
1. 방해받지 않고 놓인 돌이 몇개인가
2. 방해받지 않고 놓이 돌들 사이에 빈칸이 몇개인가
3. 방해받지 않고 놓인 돌들 양 옆에 빈칸이 몇개인가
4. 나머지는 전부 무시하는 경우
    1) 방해받지 않고 놓을 수 있는 공간이 5개 이하인 경우
    
이러면 attribute는 총 몇개인가
가능한 칸의 수 - 1~19개
나의 돌의 개수 - 1~19개
빈 칸의 개수 - 6~19개
20*20*20개
여전히 너무 많음
-> 가능한 칸의 수를 지우면
20*20개의 attribute


또한 이 방법을 적의 돌의 입장에서도 해야한다.


결과
attribute[2*14*14] = {00000~01414 , 10000 ~ 11414};
첫 하나는 나의 돌의 입장(0), 적의돌의 입장(0)
다음 두개는 나의 돌의 개수,
뒤의 두개는 적의 돌의 개수
