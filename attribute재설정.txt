기존의 방식으로 데이터를 만들어서 학습시켜보니 
기존의 attribute설정을 잘못했다는 사실을 알게 되었다.
학습한 데이터를 기반으로 ai를 적용한 결과
ai가 지속적으로 돌을 대칭적으로 두는 것을 발견하였다.
이는 우리가 설정한 attribute가 그냥 벽/적돌이 나오는 사이의 돌과 빈칸의 개수를 세는 것이기 때문에
linear function에서 가장 점수가 높은 방식은 가장 계수가 높은 걸 많이 두는 것이고
이는 생각해보면 대칭쌍을 이룰 때 점수가 높으므로 당연히 대칭적으로 두도록 학습될 것이고 
이 학습결과가 실제로 반영되어 나타나고 있었다.

따라서 logistic regression을 적용하기 위해서는 현재의 attribute는 소용이 없다는 사실을 알았고
새롭게 attribute를 재정의할 필요가 있다.

새로운 attribute는 하나의 추가적인 사항을 고려하는 데
그것은 내돌들 사이에 있는 빈칸의 개수인 것이다

초기에는 적돌/벽 사이에 내돌, 빈칸 개수만 셋다면
이제는 적돌/벽 사이에 내돌, 내돌 사이의 빈칸, 내돌 밖의 빈칸의 세가지 case를 세야할 것이다.

attribute명은 기존에 하나의 값을 추가하며
처음 한칸은 내돌(0)/적돌(1)을 의미하고
다음 두칸은 세는 돌의 총개수(6~19)
다음 두칸은 사이에 있는 빈칸개수(0~17)
다음 두칸은 내돌 개수(1~19)
를 의미한다.

c++에서는 배열의 크기가 최대 1191719가 될 것이고
attribute개수는 대략 2*14*18*19 = 9576이 되는 데
솔직히 attribute가 너무 많은데 여기서 내돌 개수는 둘수있는 총개수보다 작거나 같아야 하는 사실을 이용해보면
sum of k*(k+2) for k in range(4~17) =2065개가 된다.


